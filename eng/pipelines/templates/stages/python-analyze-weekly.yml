resources:
  repositories:
    - repository: 1ESPipelineTemplates
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

parameters:
  - name: ServiceDirectory
    type: string
    default: ''
  - name: BuildTargetingString
    type: string
    default: 'azure-*'
  - name: JobName
    type: string
    default: 'Test'


extends:
  ${{ if eq(variables['System.TeamProject'], 'internal') }}:
    template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  ${{ else }}:
    template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    ${{ if eq(variables['System.TeamProject'], 'internal') }}:
      sdl:
        sourceAnalysisPool:
          name: azsdk-pool-mms-win-2022-1es-pt
          image: azsdk-pool-mms-win-2022-1espt
          os: windows
    stages:
      - ${{ if contains(variables['Build.DefinitionName'], 'tests-weekly')  }}:
          - stage:
            displayName: 'Analyze_${{ parameters.JobName }}'
            dependsOn: []
            jobs:
              - job: 'Analyze'
                timeoutInMinutes: 90

                variables:
                  PythonVersion: '3.8'

                pool:
                  name: azsdk-pool-mms-ubuntu-2004-general
                  vmImage: MMSUbuntu20.04

                steps:
                  - task: UsePythonVersion@0
                    displayName: 'Use Python 3.8'
                    inputs:
                      versionSpec: '3.8'
                  - script: >
                      python -m pip install setuptools==58.3.0

                      python -m pip install -r eng/ci_tools.txt
                    displayName: 'Prep Environment'
                  - task: PythonScript@0
                    displayName: 'Run Pylint Next'
                    continueOnError: true
                    inputs:
                      scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
                      arguments: ${{ parameters.BuildTargetingString }} --service=${{ parameters.ServiceDirectory }}" --toxenv="next-pylint" --disablecov --filter-type="Omit_management"
                    env:
                      GH_TOKEN: $(azuresdk-github-pat)

                  - task: PythonScript@0
                    displayName: 'Run MyPy Next'
                    continueOnError: true
                    inputs:
                      scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
                      arguments: ${{ parameters.BuildTargetingString }} --service=${{ parameters.ServiceDirectory }}" --toxenv="next-mypy" --disablecov
                    env:
                      GH_TOKEN: $(azuresdk-github-pat)

                  - task: PythonScript@0
                    displayName: 'Run Pyright Next'
                    continueOnError: true
                    inputs:
                      scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
                      arguments: ${{ parameters.BuildTargetingString }} --service=${{ parameters.ServiceDirectory }}" --toxenv="next-pyright" --disablecov
                    env:
                      GH_TOKEN: $(azuresdk-github-pat)

                  - task: PythonScript@0
                    displayName: 'Run Ruff'
                    continueOnError: true
                    inputs:
                      scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
                      arguments: ${{ parameters.BuildTargetingString }} --service=${{ parameters.ServiceDirectory }}" --toxenv="ruff" --disablecov
                    env:
                      GH_TOKEN: $(azuresdk-github-pat)

                  - task: UsePythonVersion@0
                    displayName: 'Use Python 3.11 for docs generation'
                    inputs:
                      versionSpec: '3.11'

                  - script: >
                      python -m pip install setuptools==58.3.0

                      python -m pip install -r eng/ci_tools.txt
                    displayName: 'Prep Environment'

                  - task: PythonScript@0
                    displayName: 'Generate Docs'
                    continueOnError: true
                    inputs:
                      scriptPath: 'scripts/devops_tasks/dispatch_tox.py'
                      arguments: ${{ parameters.BuildTargetingString }} --service=${{ parameters.ServiceDirectory }}"  --toxenv="strict-sphinx"
                    env:
                      GH_TOKEN: $(azuresdk-github-pat)


